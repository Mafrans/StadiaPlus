name: Main

on:
  push:
    branches:
      - '**'
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - '**'
    tags:
      - '**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: Get Node version
        id: node-version
        run: |
          echo ::set-output name=version::$(node --version)
      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.version }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Create dist zip
        run: zip dist.zip dist/* manifest.json background.js LICENSE
      - uses: actions/upload-artifact@v2
        with:
          name: dist.zip
          path: dist.zip
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Get tag
        id: tag
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}
      - name: Get manifest.json version
        id: manifest
        run: echo ::set-output name=version::$(cat manifest.json | jq -r .version)
      - name: Check if tag and manifest versions match
        if: steps.tag.outputs.version != steps.manifest.outputs.version
        run: |
          echo Tag: ${{ steps.tag.outputs.version }}
          echo Manifest version: ${{ steps.manifest.outputs.version }}
          echo Tag and manifest version do not match
          exit 1
      - uses: actions/download-artifact@v2
        with:
          name: dist.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.version }}
          release_name: ${{ steps.tag.outputs.version }}
          draft: true
          prerelease: false
      - name: Upload dist to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: StadiaPlus-${{ steps.tag.outputs.version }}.zip
          asset_content_type: application/zip
      - uses: trmcnvn/chrome-addon@v2
        with:
          extension: bbhmnnecicphphjamhdefpagipoegijd
          zip: dist.zip
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
